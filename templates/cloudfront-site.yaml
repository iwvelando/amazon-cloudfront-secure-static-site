AWSTemplateFormatVersion: '2010-09-09'
Description: ACFS3 - CloudFront with Header Security and site content
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  CertificateArn:
    Description: Certificate locater
    Type: String
  DomainName:
    Description: Apex domain
    Type: String
  SubDomain:
    Description: Subdomain
    Type: String
  S3BucketLogs:
    Description: Logging Bucket
    Type: String
  S3BucketRoot:
    Description: Content Bucket
    Type: String
  S3BucketLogsName:
    Description: Logging Bucket
    Type: String
  S3BucketRootName:
    Description: Content Bucket
    Type: String
  S3BucketWebsiteURL:
    Description: Content Bucket
    Type: String
  S3BucketRootArn:
    Description: Content Bucket locator
    Type: String
  CreateApex: 
    Type: String

Conditions:
  CreateApexConfig:  !Equals
    - !Ref CreateApex
    - 'yes'

Resources:
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref 'S3BucketRoot'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Sub '${S3BucketRootArn}/*'
            Principal: '*'
          - Action:
              - s3:ListBucket
            Effect: Allow
            Resource: !Sub '${S3BucketRootArn}'
            Principal: '*'

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub '${SubDomain}.${DomainName}'
          - !If [ CreateApexConfig, !Ref DomainName, !Ref 'AWS::NoValue' ]
        DefaultCacheBehavior:
          AllowedMethods: ['GET', 'HEAD']
          CachePolicyId: '658327ea-f89d-4fab-a63d-7e88639e58f6'
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            QueryString: true
          MaxTTL: 31536000
          TargetOriginId: !Sub 'S3-${AWS::StackName}-root'
          ViewerProtocolPolicy: 'redirect-to-https'
          ResponseHeadersPolicyId: !Ref ResponseHeadersPolicy
        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: '/404.html'
          - ErrorCachingMinTTL: 60
            ErrorCode: 403
            ResponseCode: 403
            ResponsePagePath: '/403.html'
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: 'index.html'
        IPV6Enabled: true
        Origins:
          - DomainName: !Ref 'S3BucketWebsiteURL'
            Id: !Sub 'S3-${AWS::StackName}-root'
            CustomOriginConfig:
              HTTPPort: 80
              OriginProtocolPolicy: 'http-only'
        PriceClass: 'PriceClass_All'
        ViewerCertificate:
          AcmCertificateArn: !Ref 'CertificateArn'
          MinimumProtocolVersion: 'TLSv1.1_2016'
          SslSupportMethod: 'sni-only'
      Tags:
        - Key: Solution
          Value: ACFS3

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'CloudFront OAI for ${SubDomain}.${DomainName}'
        
  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub '${DomainName}.'
      RecordSets:
      - Name: !Sub '${SubDomain}.${DomainName}'
        Type: 'A'
        AliasTarget:
          DNSName: !GetAtt 'CloudFrontDistribution.DomainName'
          EvaluateTargetHealth: false
          # The  following HosteZoneId is always used for alias records pointing to CF.
          HostedZoneId: 'Z2FDTNDATAQYW2'

  ApexRoute53RecordSetGroup:
    Condition: CreateApexConfig
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub '${DomainName}.'
      RecordSets:
      - Name: !Ref 'DomainName'
        Type: 'A'
        AliasTarget:
          DNSName: !GetAtt 'CloudFrontDistribution.DomainName'
          EvaluateTargetHealth: false
          # The  following HosteZoneId is always used for alias records pointing to CF.
          HostedZoneId: 'Z2FDTNDATAQYW2'

  ResponseHeadersPolicy:
      Type: AWS::CloudFront::ResponseHeadersPolicy
      Properties: 
        ResponseHeadersPolicyConfig: 
          Name: !Sub "${AWS::StackName}-static-site-security-headers"
          SecurityHeadersConfig: 
            StrictTransportSecurity: 
              AccessControlMaxAgeSec: 63072000
              IncludeSubdomains: true
              Override: true
              Preload: true
            ContentSecurityPolicy: 
              ContentSecurityPolicy: "default-src 'none'; img-src 'self' www.household3d.com household3d.com; script-src 'self' 'unsafe-inline' www.googletagmanager.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com unpkg.com; object-src 'none'; font-src 'self' fonts.gstatic.com unpkg.com"
              Override: true
            ContentTypeOptions: 
              Override: true
            FrameOptions:
              FrameOption: DENY
              Override: true
            ReferrerPolicy: 
              ReferrerPolicy: "same-origin"
              Override: true
            XSSProtection: 
              ModeBlock: true
              Override: true
              Protection: true

Outputs:
  CloudFrontDistribution:
    Description: CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName

  CloudFrontDomainName:
    Description: Website address
    Value: !Sub '${SubDomain}.${DomainName}'
